A51 MACRO ASSEMBLER  STARTUP                                                              04/10/2023 10:03:49 PAGE     1


MACRO ASSEMBLER A51 V8.2.7.0
OBJECT MODULE PLACED IN .\Objects\STARTUP.obj
ASSEMBLER INVOKED BY: D:\keil5\C51\BIN\A51.EXE User\STARTUP.A51 INCDIR(.\User) SET(SMALL) DEBUG PRINT(.\Listings\STARTUP
                      .lst) OBJECT(.\Objects\STARTUP.obj) EP

LOC  OBJ            LINE     SOURCE

                       1     $nomod51 
                       2     ;------------------------------------------------------------------------------
                       3     ;  This file is part of the C51 Compiler package
                       4     ;  Copyright (c) 1988-2005 Keil Elektronik GmbH and Keil Software, Inc.
                       5     ;  Version 8.01
                       6     ;
                       7     ;  *** <<< Use Configuration Wizard in Context Menu >>> ***
                       8     ;------------------------------------------------------------------------------
                       9     ;  STARTUP.A51:  This code is executed after processor reset.
                      10     ;
                      11     ;  To translate this file use A51 with the following invocation:
                      12     ;
                      13     ;     A51 STARTUP.A51
                      14     ;
                      15     ;  To link the modified STARTUP.OBJ file to your application use the following
                      16     ;  Lx51 invocation:
                      17     ;
                      18     ;     Lx51 your object file list, STARTUP.OBJ  controls
                      19     ;
                      20     ;------------------------------------------------------------------------------
                      21     ;
                      22     ;  User-defined <h> Power-On Initialization of Memory
                      23     ;
                      24     ;  With the following EQU statements the initialization of memory
                      25     ;  at processor reset can be defined:
                      26     ;
                      27     ; <o> IDATALEN: IDATA memory size <0x0-0x100>
                      28     ;     <i> Note: The absolute start-address of IDATA memory is always 0
                      29     ;     <i>       The IDATA space overlaps physically the DATA and BIT areas.
  00FF                30     IDATALEN        EQU     0XFF
                      31     ;
                      32     ; <o> XDATASTART: XDATA memory start address <0x0-0xFFFF> 
                      33     ;     <i> The absolute start address of XDATA memory
  0000                34     XDATASTART      EQU     0     
                      35     ;
                      36     ; <o> XDATALEN: XDATA memory size <0x0-0xFFFF> 
                      37     ;     <i> The length of XDATA memory in bytes.
  0EF8                38     XDATALEN        EQU     0X0EF8     
                      39     ;
                      40     ; <o> PDATASTART: PDATA memory start address <0x0-0xFFFF> 
                      41     ;     <i> The absolute start address of PDATA memory
  0000                42     PDATASTART      EQU     0H
                      43     ;
                      44     ; <o> PDATALEN: PDATA memory size <0x0-0xFF> 
                      45     ;     <i> The length of PDATA memory in bytes.
  0000                46     PDATALEN        EQU     0H
                      47     ;
                      48     ;</h>
                      49     ;------------------------------------------------------------------------------
                      50     ;
                      51     ;<h> Reentrant Stack Initialization
                      52     ;
                      53     ;  The following EQU statements define the stack pointer for reentrant
                      54     ;  functions and initialized it:
                      55     ;
                      56     ; <h> Stack Space for reentrant functions in the SMALL model.
                      57     ;  <q> IBPSTACK: Enable SMALL model reentrant stack
A51 MACRO ASSEMBLER  STARTUP                                                              04/10/2023 10:03:49 PAGE     2

                      58     ;     <i> Stack space for reentrant functions in the SMALL model.
  0000                59     IBPSTACK        EQU     0       ; set to 1 if small reentrant is used.
                      60     ;  <o> IBPSTACKTOP: End address of SMALL model stack <0x0-0xFF>
                      61     ;     <i> Set the top of the stack to the highest location.
  0100                62     IBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      63     ; </h>
                      64     ;
                      65     ; <h> Stack Space for reentrant functions in the LARGE model.      
                      66     ;  <q> XBPSTACK: Enable LARGE model reentrant stack
                      67     ;     <i> Stack space for reentrant functions in the LARGE model.
  0000                68     XBPSTACK        EQU     0       ; set to 1 if large reentrant is used.
                      69     ;  <o> XBPSTACKTOP: End address of LARGE model stack <0x0-0xFFFF>
                      70     ;     <i> Set the top of the stack to the highest location.
  0000                71     XBPSTACKTOP     EQU     0xFFFF +1   ; default 0FFFFH+1 
                      72     ; </h>
                      73     ;
                      74     ; <h> Stack Space for reentrant functions in the COMPACT model.    
                      75     ;  <q> PBPSTACK: Enable COMPACT model reentrant stack
                      76     ;     <i> Stack space for reentrant functions in the COMPACT model.
  0000                77     PBPSTACK        EQU     0       ; set to 1 if compact reentrant is used.
                      78     ;
                      79     ;   <o> PBPSTACKTOP: End address of COMPACT model stack <0x0-0xFFFF>
                      80     ;     <i> Set the top of the stack to the highest location.
  0100                81     PBPSTACKTOP     EQU     0xFF +1     ; default 0FFH+1  
                      82     ; </h>
                      83     ;</h>
                      84     ;------------------------------------------------------------------------------
                      85     ;
                      86     ;  Memory Page for Using the Compact Model with 64 KByte xdata RAM
                      87     ;  <e>Compact Model Page Definition
                      88     ;
                      89     ;  <i>Define the XDATA page used for PDATA variables. 
                      90     ;  <i>PPAGE must conform with the PPAGE set in the linker invocation.
                      91     ;
                      92     ; Enable pdata memory page initalization
  0000                93     PPAGEENABLE     EQU     0       ; set to 1 if pdata object are used.
                      94     ;
                      95     ; <o> PPAGE number <0x0-0xFF> 
                      96     ; <i> uppermost 256-byte address of the page used for PDATA variables.
  0000                97     PPAGE           EQU     0
                      98     ;
                      99     ; <o> SFR address which supplies uppermost address byte <0x0-0xFF> 
                     100     ; <i> most 8051 variants use P2 as uppermost address byte
  00A0               101     PPAGE_SFR       DATA    0A0H
                     102     
  1100               103     PADDR       EQU    0x1100
                     104     ;
                     105     ; </e>
                     106     ;------------------------------------------------------------------------------
                     107     
                     108     ; Standard SFR Symbols 
  00E0               109     ACC     DATA    0E0H
  00F0               110     B       DATA    0F0H
  0081               111     SP      DATA    81H
  0082               112     DPL     DATA    82H
  0083               113     DPH     DATA    83H
                     114     
                     115                     NAME    ?C_STARTUP
                     116     
                     117     
                     118     ?C_C51STARTUP   SEGMENT   CODE
                     119     ?STACK          SEGMENT   IDATA
                     120     
----                 121                     RSEG    ?STACK
0000                 122                     DS      1
                     123     
A51 MACRO ASSEMBLER  STARTUP                                                              04/10/2023 10:03:49 PAGE     3

                     124                     EXTRN CODE (?C_START)
                     125                     PUBLIC  ?C_STARTUP
                     126            ;         CSEG AT 0003H
----                 127      CSEG AT  0003H
0003 021103          128          LJMP PADDR + 00003H
----                 129      CSEG AT  000BH
000B 02110B          130          LJMP PADDR + 0000BH
----                 131      CSEG AT  0013H
0013 021113          132          LJMP PADDR + 00013H
----                 133      CSEG AT  001BH
001B 02111B          134          LJMP PADDR + 0001BH
----                 135      CSEG AT  0023H
0023 021123          136          LJMP PADDR + 00023H
----                 137      CSEG AT  002BH
002B 02112B          138          LJMP PADDR + 0002BH
----                 139      CSEG AT  0033H
0033 021133          140          LJMP PADDR + 00033H
----                 141      CSEG AT  003BH
003B 02113B          142          LJMP PADDR + 0003BH
----                 143      CSEG AT  0043H
0043 021143          144          LJMP PADDR + 00043H
----                 145      CSEG AT  004BH
004B 02114B          146          LJMP PADDR + 0004BH
----                 147      CSEG AT  0053H
0053 021153          148          LJMP PADDR + 00053H
----                 149      CSEG AT  005BH
005B 02115B          150          LJMP PADDR + 0005BH
----                 151      CSEG AT  0063H
0063 021163          152          LJMP PADDR + 00063H
----                 153      CSEG AT  006BH
006B 02116B          154          LJMP PADDR + 0006BH
----                 155      CSEG AT  0073H
0073 021173          156          LJMP PADDR + 00073H
----                 157      CSEG AT  007BH
007B 02117B          158          LJMP PADDR + 0007BH
                     159         
----                 160                     CSEG    AT      0x0
0000 020000   F      161     ?C_STARTUP:     LJMP    STARTUP1
                     162     
----                 163                     RSEG    ?C_C51STARTUP
                     164     
0000                 165     STARTUP1:
                     166     
                     167     IF IDATALEN <> 0
0000 78FE            168                     MOV     R0,#IDATALEN - 1
0002 E4              169                     CLR     A
0003 F6              170     IDATALOOP:      MOV     @R0,A
0004 D8FD            171                     DJNZ    R0,IDATALOOP
                     172     ENDIF
                     173     
                     174     IF XDATALEN <> 0
0006 900000          175                     MOV     DPTR,#XDATASTART
0009 7FF8            176                     MOV     R7,#LOW (XDATALEN)
                     177       IF (LOW (XDATALEN)) <> 0
000B 7E0F            178                     MOV     R6,#(HIGH (XDATALEN)) +1
                     179       ELSE
                                             MOV     R6,#HIGH (XDATALEN)
                               ENDIF
000D E4              182                     CLR     A
000E F0              183     XDATALOOP:      MOVX    @DPTR,A
000F A3              184                     INC     DPTR
0010 DFFC            185                     DJNZ    R7,XDATALOOP
0012 DEFA            186                     DJNZ    R6,XDATALOOP
                     187     ENDIF
                     188     
                     189     IF PPAGEENABLE <> 0
A51 MACRO ASSEMBLER  STARTUP                                                              04/10/2023 10:03:49 PAGE     4

                                             MOV     PPAGE_SFR,#PPAGE
                             ENDIF
                     192     
                     193     IF PDATALEN <> 0
                                             MOV     R0,#LOW (PDATASTART)
                                             MOV     R7,#LOW (PDATALEN)
                                             CLR     A
                             PDATALOOP:      MOVX    @R0,A
                                             INC     R0
                                             DJNZ    R7,PDATALOOP
                             ENDIF
                     201     
                     202     IF IBPSTACK <> 0
                             EXTRN DATA (?C_IBP)
                             
                                             MOV     ?C_IBP,#LOW IBPSTACKTOP
                             ENDIF
                     207     
                     208     IF XBPSTACK <> 0
                             EXTRN DATA (?C_XBP)
                             
                                             MOV     ?C_XBP,#HIGH XBPSTACKTOP
                                             MOV     ?C_XBP+1,#LOW XBPSTACKTOP
                             ENDIF
                     214     
                     215     IF PBPSTACK <> 0
                             EXTRN DATA (?C_PBP)
                                             MOV     ?C_PBP,#LOW PBPSTACKTOP
                             ENDIF
                     219     
0014 758100   F      220                     MOV     SP,#?STACK-1
                     221     
                     222     ; This code is required if you use L51_BANK.A51 with Banking Mode 4
                     223     ;<h> Code Banking
                     224     ; <q> Select Bank 0 for L51_BANK.A51 Mode 4
                     225     
                             
                             
                                             
                             
                     230     ;</h>
0017 020000   F      231                     LJMP    ?C_START
                     232     
                     233                     END
A51 MACRO ASSEMBLER  STARTUP                                                              04/10/2023 10:03:49 PAGE     5

SYMBOL TABLE LISTING
------ ----- -------


N A M E             T Y P E  V A L U E   ATTRIBUTES

?C_C51STARTUP. . .  C SEG    001AH       REL=UNIT
?C_START . . . . .  C ADDR   -----       EXT
?C_STARTUP . . . .  C ADDR   0000H   A   
?STACK . . . . . .  I SEG    0001H       REL=UNIT
ACC. . . . . . . .  D ADDR   00E0H   A   
B. . . . . . . . .  D ADDR   00F0H   A   
DPH. . . . . . . .  D ADDR   0083H   A   
DPL. . . . . . . .  D ADDR   0082H   A   
IBPSTACK . . . . .  N NUMB   0000H   A   
IBPSTACKTOP. . . .  N NUMB   0100H   A   
IDATALEN . . . . .  N NUMB   00FFH   A   
IDATALOOP. . . . .  C ADDR   0003H   R   SEG=?C_C51STARTUP
PADDR. . . . . . .  N NUMB   1100H   A   
PBPSTACK . . . . .  N NUMB   0000H   A   
PBPSTACKTOP. . . .  N NUMB   0100H   A   
PDATALEN . . . . .  N NUMB   0000H   A   
PDATASTART . . . .  N NUMB   0000H   A   
PPAGE. . . . . . .  N NUMB   0000H   A   
PPAGEENABLE. . . .  N NUMB   0000H   A   
PPAGE_SFR. . . . .  D ADDR   00A0H   A   
SP . . . . . . . .  D ADDR   0081H   A   
STARTUP1 . . . . .  C ADDR   0000H   R   SEG=?C_C51STARTUP
XBPSTACK . . . . .  N NUMB   0000H   A   
XBPSTACKTOP. . . .  N NUMB   0000H   A   
XDATALEN . . . . .  N NUMB   0EF8H   A   
XDATALOOP. . . . .  C ADDR   000EH   R   SEG=?C_C51STARTUP
XDATASTART . . . .  N NUMB   0000H   A   


REGISTER BANK(S) USED: 0 


ASSEMBLY COMPLETE.  0 WARNING(S), 0 ERROR(S)
